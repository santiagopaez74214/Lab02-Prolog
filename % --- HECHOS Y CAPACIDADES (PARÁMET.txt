% --- HECHOS Y CAPACIDADES (PARÁMETROS DEL PROBLEMA) ---

% Coordenadas de las ubicaciones: ubicacion(ID, X, Y).
ubicacion(orilla_inicial, 0, 5).
ubicacion(piedra1, 2, 4).
ubicacion(piedra2, 5, 6).
ubicacion(piedra3, 8, 4).
ubicacion(piedra4, 5, 0).
ubicacion(orilla_final, 10, 5).

% Capacidad de la rana: distancia máxima de salto.
salto_maximo(4.0).


% Definición de la meta: ¿A qué queremos llegar?
meta(pos(orilla_final)).


%Regla DFS genérica
%Caso base
dfs(EstadoActual, _, [EstadoActual]) :-
    meta(EstadoActual).

dfs(EstadoActual, Visitados, [EstadoActual | CaminoRestante]) :-
    % 1. Genera un posible siguiente estado.
    siguiente_estado(EstadoActual, EstadoSiguiente),
    
    % 2. Asegura que el siguiente estado no ha sido visitado para evitar ciclos.
    not(member(EstadoSiguiente, Visitados)),
    
    % 3. Continúa la búsqueda desde el nuevo estado.
    dfs(EstadoSiguiente, [EstadoSiguiente | Visitados], CaminoRestante).

siguiente_estado(pos(LugarActual), pos(LugarSiguiente)) :-
	ubicacion(LugarActual, X1, Y1),
    ubicacion(LugarSiguiente, X2, Y2),
    LugarActual \= LugarSiguiente,
    RestaX is X1 - X2,
    RestaY is Y1 - Y2,
    D is sqrt((RestaX * RestaX) + (RestaY * RestaY)),
    D =< 4.0.

buscar_solucion(Solucion) :-
    EstadoInicial = pos(orilla_inicial),
    dfs(EstadoInicial, [EstadoInicial], Solucion). %dfs(Estado,Visitados, Solucion)



